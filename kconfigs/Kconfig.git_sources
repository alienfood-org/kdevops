config GIT_ALTERNATIVES
	bool "Use git trees from sources which we know only work"
	default y
	help
	  A few supported workflows require additional software to be installed.
	  An example is the fstests git tree when testing with fstests. Another
	  is the nbd (network block device) git tree which is required when
	  using blktests to allow you to compile and install the nbd server and
	  client on some distributions where these binaries not available for
	  the distribution.

	  Ideally you want to be using the latest and greatest from the
	  respective upstream project's git trees. However, sometimes using
	  the respective upstream project's git trees means you have to deal
	  with build issues. This is specially true for projects which don't
	  really have stable releases like fstests. Running into these issues
	  as developers is acceptable, we just try to fix those issues and
	  move on with life. However, if you are working to do automation of
	  testing then running into any new silly compile issues is a huge
	  detriment to your efforts.

	  To help with this, the kdevops project also has forked a few of the
	  needed repositories and keeps its own respective tree master branches
	  in a working state, so to ensure that users won't run into oddball
	  build issues. These git trees would not exist unless an issue is
	  known to exist with an existing upstream project, and so these trees
	  may also contain a small delta of fixes to address these changes.
	  The kdevops project commits to ensuring that all delta carried in
	  these trees are already submitted to their respective upstream project.

	  The kdevops project relies on two mirrors for its alternative git
	  trees:

	    * GitHub
	    * GitLab

	  We default to using kdevop's GitHub mirror.

	  The list of projects which kdevops currently forks is maintained
	  below:

	   * fstests

	  If you don't see a git tree above, it means that this option
	  (GIT_ALTERNATIVES) will not affect how we use that tree.

	  If you are a kernel developer and don't mind running into the
	  all the bumps in the road with using all upstream projects then you
	  should just disable this. You can always disable this without
	  running 'make menuconfig' by just using the latest kernel-hacking
	  defconfig:

	    make defconfig-kernel-hacking

	  Likewise to ensure you always use the conservative options you can
	  use the kernel-testing defconfig:

	    make defconfig-kernel-testing

choice
	prompt "Alternative git tree sources"
	default GIT_LINUX_KDEVOPS_GITHUB
	depends on GIT_ALTERNATIVES

config GIT_LINUX_KDEVOPS_GITHUB
	bool "Use kdevops' GitHub trees"
	help
	  If you enable this option then GitHub will be used as the source
	  of the mirrored kdevops alternative trees. The list of trees
	  on GitHub are listed here:

	  https://github.com/linux-kdevops/

config GIT_LINUX_KDEVOPS_GITLAB
	bool "Use kdevops' GitLab trees"
	help
	  If you enable this option then GitLab will be used as the source
	  of the mirrored kdevops alternative trees. The list of trees
	  on GitLab are listed here:

	  https://gitlab.com/linux-kdevops/

endchoice
