config FSTESTS_TMPFS_MANUAL_COVERAGE
	bool "Enable manual coverage selection"
	default y
	help
	  By default we aim to spawn enough hosts to cover testing the full
	  range of supported features upstream on the Linux kernel for tmpfs,
	  and for you to also be able to do development on each section
	  concurrently. Distributions however may override sensible defaults
	  and only support certain features. Enabling this option lets you
	  select and test only specific configurations.

	  By default we enables all tests, but certain distributions may
	  disable certain features and as such don't need to run certain
	  type of tests.

	  You can enable this to allow you to override the default test
	  coverage.

if FSTESTS_TMPFS_MANUAL_COVERAGE

config FSTESTS_TMPFS_SECTION_DEFAULT
	bool "Enable testing section default: tmpfs_default"
	default y
	help
	  Enabling this will test tmpfs with the default mount options.

config FSTESTS_TMPFS_ENABLE_NOSWAP
	bool "Enable testing section noswap"
	default n
	help
	  Enabling this will disable swap. By default swap is enabled.

if FSTESTS_TMPFS_ENABLE_NOSWAP

config FSTESTS_TMPFS_SECTION_NOSWAP_HUGE_NEVER
	bool "Enable testing section noswap: tmpfs_noswap_huge_never"
	default n
	help
	  With swap disabled, never allocate huge pages.

config FSTESTS_TMPFS_SECTION_NOSWAP_HUGE_ALWAYS
	bool "Enable testing section noswap: tmpfs_noswap_huge_always"
	default n
	help
	  With swap disabled, attempt to allocate huge page every time a new
	  page is needed.

config FSTESTS_TMPFS_SECTION_NOSWAP_HUGE_WITHIN_SIZE
	bool "Enable testing section noswap: tmpfs_noswap_huge_within_size"
	default n
	help
	  With swap disabled, only allocate huge page if it will be fully
	  within i_size. Also respect madvise(2) hints.

config FSTESTS_TMPFS_SECTION_NOSWAP_HUGE_ADVISE
	bool "Enable testing section noswap: tmpfs_noswap_huge_advise"
	default n
	help
	  With swap disabled, only allocate huge page if requested with madvise(2).

endif # FSTESTS_TMPFS_ENABLE_NOSWAP

config FSTESTS_TMPFS_ENABLE_HUGE
	bool "Enable testing section huge pages"
	default n
	help
	  Enabling this will enable you to test huge pages.

if FSTESTS_TMPFS_ENABLE_HUGE

config FSTESTS_TMPFS_SECTION_HUGE_ALWAYS
	bool "Enable testing section huge: tmpfs_huge_always"
	default n
	help
	  Attempt to allocate huge page every time a new page is needed.

config FSTESTS_TMPFS_SECTION_HUGE_WITHIN_SIZE
	bool "Enable testing section huge: tmpfs_huge_within_size"
	default n
	help
	  Only allocate huge page if it will be fully within i_size. Also respect
	  madvise(2) hints.

config FSTESTS_TMPFS_SECTION_HUGE_ADVISE
	bool "Enable testing section huge: tmpfs_huge_advise"
	default n
	help
	  Only allocate huge page if requested with madvise(2).

endif # FSTESTS_TMPFS_ENABLE_HUGE

endif # FSTESTS_TMPFS_MANUAL_COVERAGE

if !FSTESTS_TMPFS_MANUAL_COVERAGE

config FSTESTS_TMPFS_SECTION_DEFAULT
	bool
	default y

config FSTESTS_TMPFS_SECTION_NOSWAP
	bool

config FSTESTS_TMPFS_SECTION_NOSWAP_HUGE_NEVER
	bool

config FSTESTS_TMPFS_SECTION_NOSWAP_HUGE_ALWAYS
	bool

config FSTESTS_TMPFS_SECTION_NOSWAP_HUGE_WITHIN_SIZE
	bool

config FSTESTS_TMPFS_SECTION_NOSWAP_HUGE_ADVISE
	bool

config FSTESTS_TMPFS_SECTION_HUGE_ALWAYS
	bool

config FSTESTS_TMPFS_SECTION_HUGE_WITHIN_SIZE
	bool

config FSTESTS_TMPFS_SECTION_HUGE_ADVISE
	bool

endif # !FSTESTS_TMPFS_MANUAL_COVERAGE
